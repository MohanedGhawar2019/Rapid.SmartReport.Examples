@using Rapid.SmartReport.Examples.Models
@model Rapid.SmartReport.Core.Report<SalesData>

<div class="smart-report">
    @if (!string.IsNullOrEmpty(Model.Title))
    {
        <h3 class="report-title">@Model.Title</h3>
    }

    @foreach (var component in Model.GetComponents())
    {
        @if (component is Rapid.SmartReport.Core.Components.Tables.TableComponent<SalesData> tableComponent)
        {
            var columns = tableComponent.GetColumns();
            var options = tableComponent.GetOptions();
            var rows = tableComponent.GetRows(Model.Data);
            var currentSort = Context.Request.Query["sort"].ToString();
            var currentSortDir = Context.Request.Query["sortDir"].ToString();
            var currentSearch = Context.Request.Query["search"].ToString();

            <div class="mb-3">
                <div class="row">
                    <div class="col-md-6">
                        <form method="get" class="form-inline">
                            <div class="input-group">
                                <input type="text" name="search" class="form-control" placeholder="Search..." value="@currentSearch">
                                <input type="hidden" name="page" value="1" />
                                <input type="hidden" name="sort" value="@currentSort" />
                                <input type="hidden" name="sortDir" value="@currentSortDir" />
                                <button class="btn btn-primary" type="submit">Search</button>
                                @if (!string.IsNullOrEmpty(currentSearch))
                                {
                                    <a href="?page=1" class="btn btn-outline-secondary">Clear</a>
                                }
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            @foreach (var column in columns)
                            {
                                var isSorted = currentSort == column.Header;
                                var nextSortDir = isSorted && currentSortDir != "desc" ? "desc" : "asc";
                                var sortIcon = isSorted 
                                    ? currentSortDir == "desc" ? "↓" : "↑"
                                    : "";
                                
                                <th>
                                    <a href="?sort=@column.Header&sortDir=@nextSortDir&search=@currentSearch&page=1" 
                                       class="text-dark text-decoration-none">
                                        @column.Header @sortIcon
                                    </a>
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var row in rows)
                        {
                            <tr>
                                @for (var i = 0; i < columns.Count; i++)
                                {
                                    var value = row[i];
                                    var column = columns[i];
                                    <td>
                                        @if (!string.IsNullOrEmpty(column.Format))
                                        {
                                            @string.Format("{0:" + column.Format + "}", value)
                                        }
                                        else
                                        {
                                            @value
                                        }
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (options.Pagination != null)
            {
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <div>
                        Showing @(((options.Pagination.CurrentPage - 1) * options.Pagination.PageSize) + 1) to 
                        @Math.Min(options.Pagination.CurrentPage * options.Pagination.PageSize, options.Pagination.TotalItems) 
                        of @options.Pagination.TotalItems entries
                    </div>
                    <nav>
                        <ul class="pagination mb-0">
                            @{
                                var totalPages = (int)Math.Ceiling(options.Pagination.TotalItems / (double)options.Pagination.PageSize);
                            }
                            @for (var i = 1; i <= totalPages; i++)
                            {
                                <li class="page-item @(i == options.Pagination.CurrentPage ? "active" : "")">
                                    <a class="page-link" 
                                       href="?page=@i&sort=@currentSort&sortDir=@currentSortDir&search=@currentSearch">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
        }
    }
</div>

<style>
    .smart-report {
        margin: 20px 0;
    }

    .report-title {
        margin-bottom: 20px;
        color: #333;
    }

    .table {
        margin-bottom: 0;
    }

    .table th {
        background-color: #f8f9fa;
        border-bottom: 2px solid #dee2e6;
    }

    .table td, .table th {
        padding: .75rem;
        vertical-align: middle;
    }

    .pagination {
        margin: 0;
    }

    .page-link {
        padding: 0.375rem 0.75rem;
    }

    th a:hover {
        text-decoration: underline !important;
    }

    .input-group {
        max-width: 300px;
    }
</style>
